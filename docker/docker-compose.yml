version: '3'

services:
  orderservice:
    container_name: orderservice
    build:
      context: ../order
      dockerfile: ../order/docker/Dockerfile.orderservice
    env_file:
      - ../order/.env
    ports:
      - ${ORDER_PORT}:${ORDER_PORT}
    depends_on:
      - orderservice_db
      - storegrpcservice

  orderservice_db:
    image: mysql:8.0
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', "--init-connect='SET NAMES utf8mb4;'" ]
    container_name: orderservice_db
    restart: always
    environment:
      MYSQL_DATABASE: ${ORDER_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${ORDER_DATABASE_PASSWORD}
    ports:
      - 3370:3306
    volumes:
      - ../../var/orderservice/database:/var/lib/mysql

  storeservice:
    container_name: storeservice
    build:
      context: ../store
      dockerfile: ../store/docker/Dockerfile.storeservice
    env_file:
      - ../store/.env
    ports:
      - ${STORE_PORT}:${STORE_PORT}
    depends_on:
      - storeservice_db
      - storegrpcservice

  storegrpcservice:
      container_name: storegrpcservice
      build:
        context: ../store
        dockerfile: ../store/docker/Dockerfile.storegrpcservice
      env_file:
        - ../store/.env
      ports:
        - ${STORE_GRPC_PORT}:${STORE_GRPC_PORT}
      depends_on:
        - storeservice_db

  storeservice_db:
      image: mysql:8.0
      command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', "--init-connect='SET NAMES utf8mb4;'" ]
      container_name: storeservice_db
      restart: always
      environment:
        MYSQL_DATABASE: ${STORE_DATABASE_NAME}
        MYSQL_ROOT_PASSWORD: ${STORE_DATABASE_PASSWORD}
      ports:
        - 3371:3306
      volumes:
        - ../../var/storeservice/database:/var/lib/mysql